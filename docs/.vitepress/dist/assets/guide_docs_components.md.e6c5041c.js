import { o as s, c as a, e as n } from './app.f6179061.js';
const l = n(
    `<h1 id="组件示例" tabindex="-1">组件示例 <a class="header-anchor" href="#组件示例" aria-hidden="true">#</a></h1><p>组件示例参考了Element-Plus引用方式，内置独立的代码块解析器，目前解析器支持Vue,Ts解析。</p><p>packages中开发的组件默认都是全部引入到VitePress里面，你在编写你的示例时完全不需要担心组件引入问题。</p><p>组件示例存放在example目录中，像正常编写vue页面那样编写你的组件示例，运行时mdPlugin插件会自动在md文档流中查找代码块容器内容自动去example目录查找你示例代码文件，所以在Markdown中添加示例代码时你只要在容器中添加示例代码的路径即可</p><h2 id="编写示例" tabindex="-1">编写示例 <a class="header-anchor" href="#编写示例" aria-hidden="true">#</a></h2><p>在example目录下创建一个button目录，里面编写vue组件</p><h3 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">├──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">example</span><span style="color:#A6ACCD;">         </span><span style="color:#676E95;font-style:italic;"># 代码示例存放目录</span></span>
<span class="line"><span style="color:#FFCB6B;">│</span><span style="color:#A6ACCD;">   </span><span style="color:#C3E88D;">└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">button</span></span>
<span class="line"><span style="color:#FFCB6B;">└───────└──</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">basic.vue</span></span>
<span class="line"></span></code></pre></div><h3 id="内容" tabindex="-1">内容 <a class="header-anchor" href="#内容" aria-hidden="true">#</a></h3><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">IButton</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">primary</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮实例</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">IButton</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">IButton</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮实例</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">IButton</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">IButton</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">error</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">按钮实例</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">IButton</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">button</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">margin-right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="markdown中添加示例" tabindex="-1">Markdown中添加示例 <a class="header-anchor" href="#markdown中添加示例" aria-hidden="true">#</a></h2><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- :::demo固定写法并以:::作为末尾结束，这里标志着容器范围 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">:::demo 使用</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">type</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">plain</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">round</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">和</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">circle</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">属性来定义 Button 的样式。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 你的example目录下的示例文件目录与文件名 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">button/basic</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">:::</span></span>
<span class="line"></span></code></pre></div><p>示例代码中的路径是默认从example开始查找，所以容器中填写的路径是example开始以下的目录到文件名路径地址</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>注意：demo 后面的内容为示例组件的描述，单行识别，换行后会被识别为示例代码路径</p></div><p><a href="./../../components/button.html">查看示例</a></p>`,
    15,
  ),
  p = [l],
  D = JSON.parse(
    '{"title":"组件示例","description":"","frontmatter":{},"headers":[{"level":2,"title":"编写示例","slug":"编写示例","link":"#编写示例","children":[{"level":3,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[]},{"level":3,"title":"内容","slug":"内容","link":"#内容","children":[]}]},{"level":2,"title":"Markdown中添加示例","slug":"markdown中添加示例","link":"#markdown中添加示例","children":[]}],"relativePath":"guide/docs/components.md"}',
  ),
  o = { name: 'guide/docs/components.md' },
  y = Object.assign(o, {
    setup(e) {
      return (t, c) => (s(), a('div', null, p));
    },
  });
export { D as __pageData, y as default };
